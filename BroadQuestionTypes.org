
* Broad Question Types

** What is the *FULL* definition of /algorithm?/
An algorithm (pronounced AL-go-rith-um) is a procedure or formula for solving a problem. The word derives from the name of the mathematician, Mohammed ibn-Musa al-Khwarizmi, who was part of the royal court in Baghdad and who lived from about 780 to 850.
** How is an algorithm's time efficiency principally measured?
Big O notation (Big O (worst case), Big Theta(average case), Big Omega(best case))
** How does one define and recognize the /basic operation/ of an algorithm.
The basic operation is the operation that is:
	- Needed to solve the problem
	- Is the most time consuming
	- Is the most frequently used
** What is the established framework for analyzing an algorithm's time efficiency primarily grounded in?
** How does one analyze a given algorithm, and find its Big-Oh, Big-Omega and Big-Theta classes?
** What are the differences between the basic efficiency classes?
https://en.wikipedia.org/wiki/Algorithmic_efficiency
O(1) - Constant
O(logn) - Log
O(n) - Linear
O(nlogn) - linear Logrithmic
O(n^c) - Quadratic
O(C^n) - Exponential
** What techniques can be used to your advantage when comparing orders of growth of functions?
Constant < Log < Linear < Linear Logrithmic < Quadratic < Exponential
C < log(n) < n < nlog(n) < n^c < c^n
** What does /running time as a function of n/ mean?
** How does one recognize the running times of various algorithms, described in different ways?
** What are the basic properties of logarithms?
** What are the basics of graph searching algorithms?
** What specific algorithms are in which broad categories?
** What are the basics of optimal binary search trees?
** What are the basics of hashing?
** What are the broad types of space-time tradeoffs?
** How are information-theoretic arguments based on the amount of information an algorithm must produce?
** What is the central idea behind decision-tree theory?
** What are the broad ideas of complexity theory?
** What are the basic similarities and differences between the complexity classes P, NP and NP-Complete?
** What are the broad ideas of numerical analysis?